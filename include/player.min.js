const videoElement = document.getElementById('videoElement')
const videoContenaire = document.querySelector('.contenaire-screen')
const btnVideoControl = document.getElementById('player-controle-action')

const loader = document.getElementById('loader')

const videoProgressContenaire = document.getElementById('progress-contenaire')
const videoProgressVideo = document.getElementById('progress-amount')

document.getElementById('fullscreen').onclick = function (event) {
  if (document.fullscreenElement) {
    document.exitFullscreen()
  } else {
    document.documentElement.requestFullscreen()
  }
}

let play = 0;
// controlleur event - user
btnVideoControl.addEventListener('click', ()=>{
	playORpause()
}, false)

// controlleur event - element
videoElement.addEventListener('pause', ()=>{
	btnVideoControl.classList.remove('play')
	videoContenaire.classList.remove('not-hover')
})
videoElement.addEventListener('play', ()=>{
	btnVideoControl.classList.add('play')
	btnVideoControl.classList.add('active')
	setTimeout(()=>{
		btnVideoControl.classList.remove('active')
	}, 400)
	videoContenaire.classList.remove('not-hover')
	play++;
})

window.onkeydown = (e)=>{
	if(e.key === 'k') { playORpause() }
	if(e.key === ' ') { playORpause() }
	if(e.key === 'd') { videoElement.currentTime += 10 }
	if(e.key === 'q') { videoElement.currentTime -= 10 }
}


// var seekableEnd = myAudio.seekable.end(myAudio.seekable.length - 1);

videoElement.addEventListener('progress', function() {
	var duration =  videoElement.duration;
	if (duration > 0) {
		for (var i = 0; i < videoElement.buffered.length; i++) {
			if (videoElement.buffered.start(videoElement.buffered.length - 1 - i) < videoElement.currentTime) {
				document.getElementById("buffered-amount").style.width = (videoElement.buffered.end(videoElement.buffered.length - 1 - i) / duration) * 100 + "%";
				break;
			}
		}

		let date = new Date(Date.now() + 86400000 * 60); //86400000ms = 1 jour
		date = date.toUTCString();
		//Crée ou met à jour un cookie 'user'
		document.cookie = 'tcode='+videoElement.currentTime+'; path=/; expires=' + date;
	}

	// loader.style.display = "block"
})

videoElement.addEventListener('timeupdate', function() {
	timestampsUpdate(videoElement.currentTime, document.getElementById('time-ecoule'));
	var duration =  videoElement.duration;
	if (duration > 0) {
		document.getElementById('progress-amount').style.width = ((videoElement.currentTime / duration)*100) + "%";
	}
});

videoElement.addEventListener('durationchange', ()=>{
	timestampsUpdate(videoElement.duration, document.getElementById('time-duration'));
	videoElement.currentTime = tcode
})


videoElement.addEventListener('canplay', function() {
	loader.style.display = "block"
})

videoElement.addEventListener('canplaythrough', function() {
	loader.style.display = "none"
})






const buttonVolumeControle = document.getElementById('song')

var volumeDrag = false;
document.querySelector('.volume').addEventListener('mousedown', function (e) {
    volumeDrag = true;
    videoElement.muted = false;
    // document.querySelector('.sound').removeClass('muted');
    updateVolume(e.pageX);
});
window.addEventListener('mouseup', function (e) {
    if (volumeDrag) {
        volumeDrag = false;
        updateVolume(e.pageX);
    }
});
window.addEventListener('mousemove', function (e) {
    if (volumeDrag) {
        updateVolume(e.pageX);
    }
});

let dragPro = false;
videoProgressContenaire.addEventListener('mousedown', (event) => {
    // document.getElementById('popup-text').style.display = "none"
	const post = ((event.pageX - (videoProgressContenaire.offsetLeft + videoProgressContenaire.offsetParent.offsetLeft)) / videoProgressContenaire.offsetWidth) * videoElement.duration
	console.log(post)
	videoElement.currentTime = post
	dragPro = true

	if(play > 0)
		videoElement.play()
})
/*
progressVideoContenaire.addEventListener('mousemove', (event) => {
	// const pos = ((event.pageX - (progressVideoContenaire.offsetLeft + progressVideoContenaire.offsetParent.offsetLeft)) / progressVideoContenaire.offsetWidth) * videoElement.duration


	// var position = (e.pageX - (progressVideoContenaire.offsetLeft + progressVideoContenaire.offsetParent.offsetLeft))
        percentage = position;
	//if(dragPro){
		// progressVideoHeadShadows.style.left = percentage + "px"
		// document.getElementById('popup-text').style.left = (percentage - (document.getElementById('popup-text').offsetWidth / 2)) + "px"
		// timestampsUpdate(pos, document.getElementById('popup-text'))
		// document.getElementById('popup-text').style.display = "block"
	//}
})*/

var updateVolume = function (x, vol) {
    var volume = document.querySelector('.volume');
    var percentage;
    //if only volume have specificed
    //then direct update volume
    if (vol) {
        percentage = vol * 100;
    } else {
        var position = x - (volume.offsetLeft + volume.offsetParent.offsetLeft)
        percentage = 100 * position / volume.offsetWidth;
    }

    if (percentage > 100) {
        percentage = 100;
    }
    if (percentage < 0) {
        percentage = 0;
    }

    //update volume bar and video volume
    document.querySelector('.volumeBar').style.width = percentage + '%';
    videoElement.volume = percentage / 100;

};

function timestampsUpdate(d, txt) {
    var h = Math.floor(d / 3600);
    var m = Math.floor((d % 3600) / 60);
    var s = Math.floor((d % 3600) % 60);

    if(h < 10) {
    	h = "0"+h
    }
    if(m < 10) {
    	m = "0"+m
    }
    if(s < 10) {
    	s = "0"+s
    }

    var hDisplay = h + ":";
    var mDisplay = m + ":";
    var sDisplay = s;

    // return hDisplay + mDisplay + sDisplay;

    if(h == "00") {
    	hDisplay = ""
    }

	txt.textContent = hDisplay + mDisplay + sDisplay;
}

function playORpause() {
	if(watchThis === 0) {
		if(videoElement.paused) {
			videoElement.play()
		}
		else
		{
			videoElement.pause()
		}
	}
}


window.onload = ()=>{
	document.querySelector('body').style.display = "block"
	loader.style.display = "none"
}



function getCookie(cName) {
      const name = cName + "=";
      const cDecoded = decodeURIComponent(document.cookie); //to be careful
      const cArr = cDecoded .split('; ');
      let res;
      cArr.forEach(val => {
          if (val.indexOf(name) === 0) res = val.substring(name.length);
      })
      return res;
}